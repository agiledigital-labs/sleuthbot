service: diagnostic-tool

provider:
  name: aws
  region: ap-southeast-2
  runtime: nodejs12.x
  stage: ${opt:stage, env:STAGE, "dev"}
  apiGateway:
    restApiId: !Ref PublicApiGateway
    restApiRootResourceId: !GetAtt PublicApiGateway.RootResourceId
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'sns:Publish'
      Resource:
        - !Ref IncomingSlackMessageTopic
        - !Ref OutgoingSlackMessageTopic

custom:
  prune:
    automatic: true
    number: 5
  domain: sluthbot.sammurphy.dev

functions:
  getHealthCheck:
    handler: src/handlers/getHealthCheck.handler
    events:
      - http:
          path: hc
          method: get
  slackApp:
    handler: src/handlers/slackApp.handler
    environment:
      SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}
      SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET}
      INCOMING_SNS_TOPIC_ARN: !Ref IncomingSlackMessageTopic
    events:
      - http:
          path: slack/events
          method: get
      - http:
          path: slack/events
          method: post
  exampleHandleIncomingSlackMessage:
    handler: src/handlers/exampleHandleIncomingSlackMessage.handler
    events:
      - snsSqs:
          name: ExampleHandleIncomingSlackMessage # Required - choose a name prefix for the event queue
          topicArn: !Ref IncomingSlackMessageTopic # Required - SNS topic to subscribe to
  handleOutgoingSlackMessage:
    handler: src/handlers/handleOutgoingSlackMessage.handler
    events:
      - snsSqs:
          name: HandleOutgoingSlackMessage # Required - choose a name prefix for the event queue
          topicArn: !Ref OutgoingSlackMessageTopic # Required - SNS topic to subscribe to

resources:
  Resources:
    PublicApiGateway:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: diagnostic-tool-publicApiGateway-${self:provider.stage}
        MinimumCompressionSize: 1024
        EndpointConfiguration:
          Types:
            - EDGE
    PublicApiGatewayDeployment:
      Type: AWS::ApiGateway::Deployment
      DependsOn:
        - ApiGatewayMethodHcGet
      Properties:
        RestApiId: !Ref PublicApiGateway
    IncomingSlackMessageTopic:
      Type: AWS::SNS::Topic
    OutgoingSlackMessageTopic:
      Type: AWS::SNS::Topic
    PublicApiGatewayBasePathMapping:
      Type: AWS::ApiGateway::BasePathMapping
      DependsOn:
        - PublicApiGatewayDeployment
      Properties:
        DomainName: !Ref PublicApiGatewayDomainName
        Stage: ${self:provider.stage}
        RestApiId: !Ref PublicApiGateway
    PublicApiGatewayDomainName:
      Type: AWS::ApiGateway::DomainName
      Properties:
        CertificateArn: arn:aws:acm:us-east-1:#{AWS::AccountId}:certificate/becfa201-6302-4676-be72-5e8b49d1ee56
        DomainName: ${self:provider.stage}.${self:custom.domain}
        EndpointConfiguration:
          Types:
            - EDGE
        SecurityPolicy: TLS_1_2
    PublicAliasRecord:
      Type: AWS::Route53::RecordSet
      DependsOn:
        - PublicApiGatewayDomainName
      Properties:
        AliasTarget:
          DNSName: !GetAtt PublicApiGatewayDomainName.DistributionDomainName
          EvaluateTargetHealth: false
          HostedZoneId: !GetAtt PublicApiGatewayDomainName.DistributionHostedZoneId
        Type: A
        Name: ${self:provider.stage}.${self:custom.domain}
        HostedZoneName: ${self:custom.domain}.
  Outputs:
    PublicApiGateway:
      Description: The ID of the REST API.
      Value: !Ref PublicApiGateway
      Export:
        Name: PublicApiGateway-${self:provider.stage}
    PublicApiGatewayRootResource:
      Description: The ID of the root resource of the REST API.
      Value: !GetAtt PublicApiGateway.RootResourceId
      Export:
        Name: PublicApiGatewayRootResource-${self:provider.stage}

plugins:
  - serverless-pseudo-parameters
  - serverless-webpack
  - serverless-prune-plugin
  - serverless-offline
